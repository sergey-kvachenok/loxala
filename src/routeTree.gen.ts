/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ItemYRouteImport } from './routes/item-y'
import { Route as ItemXRouteImport } from './routes/item-x'
import { Route as ItemBRouteImport } from './routes/item-b'
import { Route as ItemARouteImport } from './routes/item-a'
import { Route as ItemCRouteImport } from './routes/Item-c'
import { Route as IndexRouteImport } from './routes/index'

const ItemYRoute = ItemYRouteImport.update({
  id: '/item-y',
  path: '/item-y',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemXRoute = ItemXRouteImport.update({
  id: '/item-x',
  path: '/item-x',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemBRoute = ItemBRouteImport.update({
  id: '/item-b',
  path: '/item-b',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemARoute = ItemARouteImport.update({
  id: '/item-a',
  path: '/item-a',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemCRoute = ItemCRouteImport.update({
  id: '/Item-c',
  path: '/Item-c',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Item-c': typeof ItemCRoute
  '/item-a': typeof ItemARoute
  '/item-b': typeof ItemBRoute
  '/item-x': typeof ItemXRoute
  '/item-y': typeof ItemYRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Item-c': typeof ItemCRoute
  '/item-a': typeof ItemARoute
  '/item-b': typeof ItemBRoute
  '/item-x': typeof ItemXRoute
  '/item-y': typeof ItemYRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Item-c': typeof ItemCRoute
  '/item-a': typeof ItemARoute
  '/item-b': typeof ItemBRoute
  '/item-x': typeof ItemXRoute
  '/item-y': typeof ItemYRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/Item-c' | '/item-a' | '/item-b' | '/item-x' | '/item-y'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Item-c' | '/item-a' | '/item-b' | '/item-x' | '/item-y'
  id:
    | '__root__'
    | '/'
    | '/Item-c'
    | '/item-a'
    | '/item-b'
    | '/item-x'
    | '/item-y'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ItemCRoute: typeof ItemCRoute
  ItemARoute: typeof ItemARoute
  ItemBRoute: typeof ItemBRoute
  ItemXRoute: typeof ItemXRoute
  ItemYRoute: typeof ItemYRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/item-y': {
      id: '/item-y'
      path: '/item-y'
      fullPath: '/item-y'
      preLoaderRoute: typeof ItemYRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/item-x': {
      id: '/item-x'
      path: '/item-x'
      fullPath: '/item-x'
      preLoaderRoute: typeof ItemXRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/item-b': {
      id: '/item-b'
      path: '/item-b'
      fullPath: '/item-b'
      preLoaderRoute: typeof ItemBRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/item-a': {
      id: '/item-a'
      path: '/item-a'
      fullPath: '/item-a'
      preLoaderRoute: typeof ItemARouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Item-c': {
      id: '/Item-c'
      path: '/Item-c'
      fullPath: '/Item-c'
      preLoaderRoute: typeof ItemCRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ItemCRoute: ItemCRoute,
  ItemARoute: ItemARoute,
  ItemBRoute: ItemBRoute,
  ItemXRoute: ItemXRoute,
  ItemYRoute: ItemYRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
